# 字符串截取
var1 = 'Hello World!'
var2 = "Runoob"
 
print ("var1[0]: ", var1[0])
print ("var2[1:5]: ", var2[1:5])

# 格式化字符串的输出
# Python 支持格式化字符串的输出 。尽管这样可能会用到非常复杂的表达式，
# 但最基本的用法是将一个值插入到一个有字符串格式符 %s 的字符
print ("我叫 %s 今年 %d 岁!" % ('小明', 10))
	# python字符串格式化符号 %f 可指定小数点后的精度。
	# print("the price  is  %.2f" %num)
	# the price  is  18.73
	# [::2] 表示的是从头到尾，步长为2。第一个冒号两侧的数字是指截取字符串的范围,第二个冒号后面是指截取的步长。

# 三引号
para_str = """这是一个多行字符串的实例
多行字符串可以使用制表符
TAB ( \t )。
也可以使用换行符 [ \n ]。
"""
print (para_str)
# 三引号让程序员从引号和特殊字符串的泥潭里面解脱出来，
# 	自始至终保持一小块字符串的格式是所谓的WYSIWYG（所见即所得）格式的。
# 一个典型的用例是，当你需要一块HTML或者SQL时，这时用字符串组合，
# 	特殊字符串转义将会非常的繁琐。

########################################### 列表元组字典


# 关键字end可以用于将结果输出到同一行，或者在输出的末尾添加不同的字符，实例如下：
# Fibonacci series: 斐波纳契数列
# 两个元素的总和确定了下一个数
a, b = 0, 1
while b < 1000:
    print(b, end=',')
    a, b = b, a+b


print("\n***************************************")
a=2
if a==1:
    print("condition=1")
elif a==2:
    print("condition=2")
else:
    print("condition=3")

print("\n***************************************")

# if嵌套
# if 表达式1:
#     语句
#     if 表达式2:
#         语句
#     elif 表达式3:
#         语句
#     else:
#         语句
# elif 表达式4:
#     语句
# else:
#     语句


